{"version":3,"file":"three-to-cannon.umd.js","sources":["../lib/ConvexHull.js","../src/utils.ts","../src/index.ts"],"sourcesContent":["import {\n\tLine3,\n\tPlane,\n\tTriangle,\n\tVector3\n} from 'three';\n/**\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n */\n\nvar ConvexHull = ( function () {\n\n\tvar Visible = 0;\n\tvar Deleted = 1;\n\n\tvar v1 = new Vector3();\n\n\tfunction ConvexHull() {\n\n\t\tthis.tolerance = - 1;\n\n\t\tthis.faces = []; // the generated faces of the convex hull\n\t\tthis.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n\t\t// the vertex lists work as follows:\n\t\t//\n\t\t// let 'a' and 'b' be 'Face' instances\n\t\t// let 'v' be points wrapped as instance of 'Vertex'\n\t\t//\n\t\t//     [v, v, ..., v, v, v, ...]\n\t\t//      ^             ^\n\t\t//      |             |\n\t\t//  a.outside     b.outside\n\t\t//\n\t\tthis.assigned = new VertexList();\n\t\tthis.unassigned = new VertexList();\n\n\t\tthis.vertices = []; \t// vertices of the hull (internal representation of given geometry data)\n\n\t}\n\n\tObject.assign( ConvexHull.prototype, {\n\n\t\ttoJSON: function () {\n\t\t\t// Original ('src') indices do not include interior vertices,\n\t\t\t// but 'this.vertices' (the list they index) does. Output ('dst')\n\t\t\t// arrays have interior vertices omitted.\n\n\t\t\tconst srcIndices = this.faces.map((f) => f.toArray());\n\t\t\tconst uniqueSrcIndices = Array.from(new Set(srcIndices.flat())).sort();\n\n\t\t\t// Output vertex positions, omitting interior vertices.\n\t\t\tconst dstPositions = [];\n\t\t\tfor (let i = 0; i < uniqueSrcIndices.length; i++) {\n\t\t\t\tdstPositions.push(\n\t\t\t\t\tthis.vertices[uniqueSrcIndices[i]].point.x,\n\t\t\t\t\tthis.vertices[uniqueSrcIndices[i]].point.y,\n\t\t\t\t\tthis.vertices[uniqueSrcIndices[i]].point.z,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Mapping from 'src' (this.vertices) to 'dst' (dstPositions) indices.\n\t\t\tconst srcToDstIndexMap = new Map();\n\t\t\tfor (let i = 0; i < uniqueSrcIndices.length; i++) {\n\t\t\t\tsrcToDstIndexMap.set(uniqueSrcIndices[i], i);\n\t\t\t}\n\n\t\t\t// Output triangles, as indices on dstPositions.\n\t\t\tconst dstIndices = [];\n\t\t\tfor (let i = 0; i < srcIndices.length; i++) {\n\t\t\t\tdstIndices.push([\n\t\t\t\t\tsrcToDstIndexMap.get(srcIndices[i][0]),\n\t\t\t\t\tsrcToDstIndexMap.get(srcIndices[i][1]),\n\t\t\t\t\tsrcToDstIndexMap.get(srcIndices[i][2]),\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\treturn [dstPositions, dstIndices];\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tif ( Array.isArray( points ) !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.ConvexHull: Points parameter is not an array.' );\n\n\t\t\t}\n\n\t\t\tif ( points.length < 4 ) {\n\n\t\t\t\tconsole.error( 'THREE.ConvexHull: The algorithm needs at least four points.' );\n\n\t\t\t}\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.vertices.push( new VertexNode( points[ i ], i ) );\n\n\t\t\t}\n\n\t\t\tthis.compute();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tvar points = [];\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar i, l, point;\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry === undefined ) return;\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tgeometry = geometry.toBufferGeometry\n\t\t\t\t\t\t? geometry.toBufferGeometry()\n\t\t\t\t\t\t: new BufferGeometry().fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tpoint = new Vector3();\n\n\t\t\t\t\t\t\tpoint.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tpoints.push( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.setFromPoints( points );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar faces = this.faces;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// compute signed distance and check on what half space the point lies\n\n\t\t\t\tif ( face.distanceToPoint( point ) > this.tolerance ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectRay: function ( ray, target ) {\n\n\t\t\t// based on \"Fast Ray-Convex Polyhedron Intersection\"  by Eric Haines, GRAPHICS GEMS II\n\n\t\t\tvar faces = this.faces;\n\n\t\t\tvar tNear = - Infinity;\n\t\t\tvar tFar = Infinity;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// interpret faces as planes for the further computation\n\n\t\t\t\tvar vN = face.distanceToPoint( ray.origin );\n\t\t\t\tvar vD = face.normal.dot( ray.direction );\n\n\t\t\t\t// if the origin is on the positive side of a plane (so the plane can \"see\" the origin) and\n\t\t\t\t// the ray is turned away or parallel to the plane, there is no intersection\n\n\t\t\t\tif ( vN > 0 && vD >= 0 ) return null;\n\n\t\t\t\t// compute the distance from the ray’s origin to the intersection with the plane\n\n\t\t\t\tvar t = ( vD !== 0 ) ? ( - vN / vD ) : 0;\n\n\t\t\t\t// only proceed if the distance is positive. a negative distance means the intersection point\n\t\t\t\t// lies \"behind\" the origin\n\n\t\t\t\tif ( t <= 0 ) continue;\n\n\t\t\t\t// now categorized plane as front-facing or back-facing\n\n\t\t\t\tif ( vD > 0 ) {\n\n\t\t\t\t\t//  plane faces away from the ray, so this plane is a back-face\n\n\t\t\t\t\ttFar = Math.min( t, tFar );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// front-face\n\n\t\t\t\t\ttNear = Math.max( t, tNear );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tNear > tFar ) {\n\n\t\t\t\t\t// if tNear ever is greater than tFar, the ray must miss the convex hull\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// evaluate intersection point\n\n\t\t\t// always try tNear first since its the closer intersection point\n\n\t\t\tif ( tNear !== - Infinity ) {\n\n\t\t\t\tray.at( tNear, target );\n\n\t\t\t} else {\n\n\t\t\t\tray.at( tFar, target );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersectsRay: function ( ray ) {\n\n\t\t\treturn this.intersectRay( ray, v1 ) !== null;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.faces = [];\n\t\t\tthis.vertices = [];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n\t\taddVertexToFace: function ( vertex, face ) {\n\n\t\t\tvertex.face = face;\n\n\t\t\tif ( face.outside === null ) {\n\n\t\t\t\tthis.assigned.append( vertex );\n\n\t\t\t} else {\n\n\t\t\t\tthis.assigned.insertBefore( face.outside, vertex );\n\n\t\t\t}\n\n\t\t\tface.outside = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a vertex from the 'assigned' list of vertices and from the given face\n\n\t\tremoveVertexFromFace: function ( vertex, face ) {\n\n\t\t\tif ( vertex === face.outside ) {\n\n\t\t\t\t// fix face.outside link\n\n\t\t\t\tif ( vertex.next !== null && vertex.next.face === face ) {\n\n\t\t\t\t\t// face has at least 2 outside vertices, move the 'outside' reference\n\n\t\t\t\t\tface.outside = vertex.next;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// vertex was the only outside vertex that face had\n\n\t\t\t\t\tface.outside = null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.assigned.remove( vertex );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n\t\tremoveAllVerticesFromFace: function ( face ) {\n\n\t\t\tif ( face.outside !== null ) {\n\n\t\t\t\t// reference to the first and last vertex of this face\n\n\t\t\t\tvar start = face.outside;\n\t\t\t\tvar end = face.outside;\n\n\t\t\t\twhile ( end.next !== null && end.next.face === face ) {\n\n\t\t\t\t\tend = end.next;\n\n\t\t\t\t}\n\n\t\t\t\tthis.assigned.removeSubList( start, end );\n\n\t\t\t\t// fix references\n\n\t\t\t\tstart.prev = end.next = null;\n\t\t\t\tface.outside = null;\n\n\t\t\t\treturn start;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Removes all the visible vertices that 'face' is able to see\n\n\t\tdeleteFaceVertices: function ( face, absorbingFace ) {\n\n\t\t\tvar faceVertices = this.removeAllVerticesFromFace( face );\n\n\t\t\tif ( faceVertices !== undefined ) {\n\n\t\t\t\tif ( absorbingFace === undefined ) {\n\n\t\t\t\t\t// mark the vertices to be reassigned to some other face\n\n\t\t\t\t\tthis.unassigned.appendChain( faceVertices );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if there's an absorbing face try to assign as many vertices as possible to it\n\n\t\t\t\t\tvar vertex = faceVertices;\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\t// we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n\t\t\t\t\t\t// will be changed by upcoming method calls\n\n\t\t\t\t\t\tvar nextVertex = vertex.next;\n\n\t\t\t\t\t\tvar distance = absorbingFace.distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t// check if 'vertex' is able to see 'absorbingFace'\n\n\t\t\t\t\t\tif ( distance > this.tolerance ) {\n\n\t\t\t\t\t\t\tthis.addVertexToFace( vertex, absorbingFace );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.unassigned.append( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// now assign next vertex\n\n\t\t\t\t\t\tvertex = nextVertex;\n\n\t\t\t\t\t} while ( vertex !== null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Reassigns as many vertices as possible from the unassigned list to the new faces\n\n\t\tresolveUnassignedPoints: function ( newFaces ) {\n\n\t\t\tif ( this.unassigned.isEmpty() === false ) {\n\n\t\t\t\tvar vertex = this.unassigned.first();\n\n\t\t\t\tdo {\n\n\t\t\t\t\t// buffer 'next' reference, see .deleteFaceVertices()\n\n\t\t\t\t\tvar nextVertex = vertex.next;\n\n\t\t\t\t\tvar maxDistance = this.tolerance;\n\n\t\t\t\t\tvar maxFace = null;\n\n\t\t\t\t\tfor ( var i = 0; i < newFaces.length; i ++ ) {\n\n\t\t\t\t\t\tvar face = newFaces[ i ];\n\n\t\t\t\t\t\tif ( face.mark === Visible ) {\n\n\t\t\t\t\t\t\tvar distance = face.distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\t\tmaxFace = face;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( maxDistance > 1000 * this.tolerance ) break;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// 'maxFace' can be null e.g. if there are identical vertices\n\n\t\t\t\t\tif ( maxFace !== null ) {\n\n\t\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertex = nextVertex;\n\n\t\t\t\t} while ( vertex !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Computes the extremes of a simplex which will be the initial hull\n\n\t\tcomputeExtremes: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\tvar minVertices = [];\n\t\t\tvar maxVertices = [];\n\n\t\t\tvar i, l, j;\n\n\t\t\t// initially assume that the first vertex is the min/max\n\n\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\tminVertices[ i ] = maxVertices[ i ] = this.vertices[ 0 ];\n\n\t\t\t}\n\n\t\t\tmin.copy( this.vertices[ 0 ].point );\n\t\t\tmax.copy( this.vertices[ 0 ].point );\n\n\t\t\t// compute the min/max vertex on all six directions\n\n\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvar point = vertex.point;\n\n\t\t\t\t// update the min coordinates\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tif ( point.getComponent( j ) < min.getComponent( j ) ) {\n\n\t\t\t\t\t\tmin.setComponent( j, point.getComponent( j ) );\n\t\t\t\t\t\tminVertices[ j ] = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// update the max coordinates\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tif ( point.getComponent( j ) > max.getComponent( j ) ) {\n\n\t\t\t\t\t\tmax.setComponent( j, point.getComponent( j ) );\n\t\t\t\t\t\tmaxVertices[ j ] = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use min/max vectors to compute an optimal epsilon\n\n\t\t\tthis.tolerance = 3 * Number.EPSILON * (\n\t\t\t\tMath.max( Math.abs( min.x ), Math.abs( max.x ) ) +\n\t\t\t\tMath.max( Math.abs( min.y ), Math.abs( max.y ) ) +\n\t\t\t\tMath.max( Math.abs( min.z ), Math.abs( max.z ) )\n\t\t\t);\n\n\t\t\treturn { min: minVertices, max: maxVertices };\n\n\t\t},\n\n\t\t// Computes the initial simplex assigning to its faces all the points\n\t\t// that are candidates to form part of the hull\n\n\t\tcomputeInitialHull: function () {\n\n\t\t\tvar line3, plane, closestPoint;\n\n\t\t\treturn function computeInitialHull() {\n\n\t\t\t\tif ( line3 === undefined ) {\n\n\t\t\t\t\tline3 = new Line3();\n\t\t\t\t\tplane = new Plane();\n\t\t\t\t\tclosestPoint = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar vertex, vertices = this.vertices;\n\t\t\t\tvar extremes = this.computeExtremes();\n\t\t\t\tvar min = extremes.min;\n\t\t\t\tvar max = extremes.max;\n\n\t\t\t\tvar v0, v1, v2, v3;\n\t\t\t\tvar i, l, j;\n\n\t\t\t\t// 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n\t\t\t\t// (max.x - min.x)\n\t\t\t\t// (max.y - min.y)\n\t\t\t\t// (max.z - min.z)\n\n\t\t\t\tvar distance, maxDistance = 0;\n\t\t\t\tvar index = 0;\n\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tdistance = max[ i ].point.getComponent( i ) - min[ i ].point.getComponent( i );\n\n\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\tindex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tv0 = min[ index ];\n\t\t\t\tv1 = max[ index ];\n\n\t\t\t\t// 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n\t\t\t\tmaxDistance = 0;\n\t\t\t\tline3.set( v0.point, v1.point );\n\n\t\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 ) {\n\n\t\t\t\t\t\tline3.closestPointToPoint( vertex.point, true, closestPoint );\n\n\t\t\t\t\t\tdistance = closestPoint.distanceToSquared( vertex.point );\n\n\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\tv2 = vertex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n\t\t\t\tmaxDistance = - 1;\n\t\t\t\tplane.setFromCoplanarPoints( v0.point, v1.point, v2.point );\n\n\t\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 ) {\n\n\t\t\t\t\t\tdistance = Math.abs( plane.distanceToPoint( vertex.point ) );\n\n\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\tv3 = vertex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar faces = [];\n\n\t\t\t\tif ( plane.distanceToPoint( v3.point ) < 0 ) {\n\n\t\t\t\t\t// the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tFace.create( v0, v1, v2 ),\n\t\t\t\t\t\tFace.create( v3, v1, v0 ),\n\t\t\t\t\t\tFace.create( v3, v2, v1 ),\n\t\t\t\t\t\tFace.create( v3, v0, v2 )\n\t\t\t\t\t);\n\n\t\t\t\t\t// set the twin edge\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tj = ( i + 1 ) % 3;\n\n\t\t\t\t\t\t// join face[ i ] i > 0, with the first face\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( j ) );\n\n\t\t\t\t\t\t// join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 1 ).setTwin( faces[ j + 1 ].getEdge( 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tFace.create( v0, v2, v1 ),\n\t\t\t\t\t\tFace.create( v3, v0, v1 ),\n\t\t\t\t\t\tFace.create( v3, v1, v2 ),\n\t\t\t\t\t\tFace.create( v3, v2, v0 )\n\t\t\t\t\t);\n\n\t\t\t\t\t// set the twin edge\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tj = ( i + 1 ) % 3;\n\n\t\t\t\t\t\t// join face[ i ] i > 0, with the first face\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( ( 3 - i ) % 3 ) );\n\n\t\t\t\t\t\t// join face[ i ] with face[ i + 1 ]\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 0 ).setTwin( faces[ j + 1 ].getEdge( 1 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// the initial hull is the tetrahedron\n\n\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\tthis.faces.push( faces[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t// initial assignment of vertices to the faces of the tetrahedron\n\n\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3 ) {\n\n\t\t\t\t\t\tmaxDistance = this.tolerance;\n\t\t\t\t\t\tvar maxFace = null;\n\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\tdistance = this.faces[ j ].distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\t\tmaxFace = this.faces[ j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( maxFace !== null ) {\n\n\t\t\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// Removes inactive faces\n\n\t\treindexFaces: function () {\n\n\t\t\tvar activeFaces = [];\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tif ( face.mark === Visible ) {\n\n\t\t\t\t\tactiveFaces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.faces = activeFaces;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Finds the next vertex to create faces with the current hull\n\n\t\tnextVertexToAdd: function () {\n\n\t\t\t// if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n\t\t\tif ( this.assigned.isEmpty() === false ) {\n\n\t\t\t\tvar eyeVertex, maxDistance = 0;\n\n\t\t\t\t// grap the first available face and start with the first visible vertex of that face\n\n\t\t\t\tvar eyeFace = this.assigned.first().face;\n\t\t\t\tvar vertex = eyeFace.outside;\n\n\t\t\t\t// now calculate the farthest vertex that face can see\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvar distance = eyeFace.distanceToPoint( vertex.point );\n\n\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\teyeVertex = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertex = vertex.next;\n\n\t\t\t\t} while ( vertex !== null && vertex.face === eyeFace );\n\n\t\t\t\treturn eyeVertex;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Computes a chain of half edges in CCW order called the 'horizon'.\n\t\t// For an edge to be part of the horizon it must join a face that can see\n\t\t// 'eyePoint' and a face that cannot see 'eyePoint'.\n\n\t\tcomputeHorizon: function ( eyePoint, crossEdge, face, horizon ) {\n\n\t\t\t// moves face's vertices to the 'unassigned' vertex list\n\n\t\t\tthis.deleteFaceVertices( face );\n\n\t\t\tface.mark = Deleted;\n\n\t\t\tvar edge;\n\n\t\t\tif ( crossEdge === null ) {\n\n\t\t\t\tedge = crossEdge = face.getEdge( 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// start from the next edge since 'crossEdge' was already analyzed\n\t\t\t\t// (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n\t\t\t\tedge = crossEdge.next;\n\n\t\t\t}\n\n\t\t\tdo {\n\n\t\t\t\tvar twinEdge = edge.twin;\n\t\t\t\tvar oppositeFace = twinEdge.face;\n\n\t\t\t\tif ( oppositeFace.mark === Visible ) {\n\n\t\t\t\t\tif ( oppositeFace.distanceToPoint( eyePoint ) > this.tolerance ) {\n\n\t\t\t\t\t\t// the opposite face can see the vertex, so proceed with next edge\n\n\t\t\t\t\t\tthis.computeHorizon( eyePoint, twinEdge, oppositeFace, horizon );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the opposite face can't see the vertex, so this edge is part of the horizon\n\n\t\t\t\t\t\thorizon.push( edge );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tedge = edge.next;\n\n\t\t\t} while ( edge !== crossEdge );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n\t\taddAdjoiningFace: function ( eyeVertex, horizonEdge ) {\n\n\t\t\t// all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n\t\t\tvar face = Face.create( eyeVertex, horizonEdge.tail(), horizonEdge.head() );\n\n\t\t\tthis.faces.push( face );\n\n\t\t\t// join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n\t\t\tface.getEdge( - 1 ).setTwin( horizonEdge.twin );\n\n\t\t\treturn face.getEdge( 0 ); // the half edge whose vertex is the eyeVertex\n\n\n\t\t},\n\n\t\t//  Adds 'horizon.length' faces to the hull, each face will be linked with the\n\t\t//  horizon opposite face and the face on the left/right\n\n\t\taddNewFaces: function ( eyeVertex, horizon ) {\n\n\t\t\tthis.newFaces = [];\n\n\t\t\tvar firstSideEdge = null;\n\t\t\tvar previousSideEdge = null;\n\n\t\t\tfor ( var i = 0; i < horizon.length; i ++ ) {\n\n\t\t\t\tvar horizonEdge = horizon[ i ];\n\n\t\t\t\t// returns the right side edge\n\n\t\t\t\tvar sideEdge = this.addAdjoiningFace( eyeVertex, horizonEdge );\n\n\t\t\t\tif ( firstSideEdge === null ) {\n\n\t\t\t\t\tfirstSideEdge = sideEdge;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n\t\t\t\t\tsideEdge.next.setTwin( previousSideEdge );\n\n\t\t\t\t}\n\n\t\t\t\tthis.newFaces.push( sideEdge.face );\n\t\t\t\tpreviousSideEdge = sideEdge;\n\n\t\t\t}\n\n\t\t\t// perform final join of new faces\n\n\t\t\tfirstSideEdge.next.setTwin( previousSideEdge );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Adds a vertex to the hull\n\n\t\taddVertexToHull: function ( eyeVertex ) {\n\n\t\t\tvar horizon = [];\n\n\t\t\tthis.unassigned.clear();\n\n\t\t\t// remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n\t\t\tthis.removeVertexFromFace( eyeVertex, eyeVertex.face );\n\n\t\t\tthis.computeHorizon( eyeVertex.point, null, eyeVertex.face, horizon );\n\n\t\t\tthis.addNewFaces( eyeVertex, horizon );\n\n\t\t\t// reassign 'unassigned' vertices to the new faces\n\n\t\t\tthis.resolveUnassignedPoints( this.newFaces );\n\n\t\t\treturn\tthis;\n\n\t\t},\n\n\t\tcleanup: function () {\n\n\t\t\tthis.assigned.clear();\n\t\t\tthis.unassigned.clear();\n\t\t\tthis.newFaces = [];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompute: function () {\n\n\t\t\tvar vertex;\n\n\t\t\tthis.computeInitialHull();\n\n\t\t\t// add all available vertices gradually to the hull\n\n\t\t\twhile ( ( vertex = this.nextVertexToAdd() ) !== undefined ) {\n\n\t\t\t\tthis.addVertexToHull( vertex );\n\n\t\t\t}\n\n\t\t\tthis.reindexFaces();\n\n\t\t\tthis.cleanup();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Face() {\n\n\t\tthis.normal = new Vector3();\n\t\tthis.midpoint = new Vector3();\n\t\tthis.area = 0;\n\n\t\tthis.constant = 0; // signed distance from face to the origin\n\t\tthis.outside = null; // reference to a vertex in a vertex list this face can see\n\t\tthis.mark = Visible;\n\t\tthis.edge = null;\n\n\t}\n\n\tObject.assign( Face, {\n\n\t\tcreate: function ( a, b, c ) {\n\n\t\t\tvar face = new Face();\n\n\t\t\tvar e0 = new HalfEdge( a, face );\n\t\t\tvar e1 = new HalfEdge( b, face );\n\t\t\tvar e2 = new HalfEdge( c, face );\n\n\t\t\t// join edges\n\n\t\t\te0.next = e2.prev = e1;\n\t\t\te1.next = e0.prev = e2;\n\t\t\te2.next = e1.prev = e0;\n\n\t\t\t// main half edge reference\n\n\t\t\tface.edge = e0;\n\n\t\t\treturn face.compute();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Face.prototype, {\n\n\t\ttoArray: function () {\n\t\t\tconst indices = [];\n\t\t\tlet edge = this.edge;\n\t\t\tdo {\n\t\t\t\tindices.push(edge.head().index);\n\t\t\t\tedge = edge.next;\n\t\t\t} while (edge !== this.edge);\n\t\t\treturn indices;\n\t\t},\n\n\t\tgetEdge: function ( i ) {\n\n\t\t\tvar edge = this.edge;\n\n\t\t\twhile ( i > 0 ) {\n\n\t\t\t\tedge = edge.next;\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\twhile ( i < 0 ) {\n\n\t\t\t\tedge = edge.prev;\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn edge;\n\n\t\t},\n\n\t\tcompute: function () {\n\n\t\t\tvar triangle;\n\n\t\t\treturn function compute() {\n\n\t\t\t\tif ( triangle === undefined ) triangle = new Triangle();\n\n\t\t\t\tvar a = this.edge.tail();\n\t\t\t\tvar b = this.edge.head();\n\t\t\t\tvar c = this.edge.next.head();\n\n\t\t\t\ttriangle.set( a.point, b.point, c.point );\n\n\t\t\t\ttriangle.getNormal( this.normal );\n\t\t\t\ttriangle.getMidpoint( this.midpoint );\n\t\t\t\tthis.area = triangle.getArea();\n\n\t\t\t\tthis.constant = this.normal.dot( this.midpoint );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) - this.constant;\n\n\t\t}\n\n\t} );\n\n\t// Entity for a Doubly-Connected Edge List (DCEL).\n\n\tfunction HalfEdge( vertex, face ) {\n\n\t\tthis.vertex = vertex;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t\tthis.twin = null;\n\t\tthis.face = face;\n\n\t}\n\n\tObject.assign( HalfEdge.prototype, {\n\n\t\thead: function () {\n\n\t\t\treturn this.vertex;\n\n\t\t},\n\n\t\ttail: function () {\n\n\t\t\treturn this.prev ? this.prev.vertex : null;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\tvar head = this.head();\n\t\t\tvar tail = this.tail();\n\n\t\t\tif ( tail !== null ) {\n\n\t\t\t\treturn tail.point.distanceTo( head.point );\n\n\t\t\t}\n\n\t\t\treturn - 1;\n\n\t\t},\n\n\t\tlengthSquared: function () {\n\n\t\t\tvar head = this.head();\n\t\t\tvar tail = this.tail();\n\n\t\t\tif ( tail !== null ) {\n\n\t\t\t\treturn tail.point.distanceToSquared( head.point );\n\n\t\t\t}\n\n\t\t\treturn - 1;\n\n\t\t},\n\n\t\tsetTwin: function ( edge ) {\n\n\t\t\tthis.twin = edge;\n\t\t\tedge.twin = this;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// A vertex as a double linked list node.\n\n\tfunction VertexNode( point, index ) {\n\n\t\tthis.point = point;\n\t\t// index in the input array\n\t\tthis.index = index;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t\t// the face that is able to see this vertex\n\t\tthis.face = null;\n\n\t}\n\n\t// A double linked list that contains vertex nodes.\n\n\tfunction VertexList() {\n\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\n\t}\n\n\tObject.assign( VertexList.prototype, {\n\n\t\tfirst: function () {\n\n\t\t\treturn this.head;\n\n\t\t},\n\n\t\tlast: function () {\n\n\t\t\treturn this.tail;\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.head = this.tail = null;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Inserts a vertex before the target vertex\n\n\t\tinsertBefore: function ( target, vertex ) {\n\n\t\t\tvertex.prev = target.prev;\n\t\t\tvertex.next = target;\n\n\t\t\tif ( vertex.prev === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.prev.next = vertex;\n\n\t\t\t}\n\n\t\t\ttarget.prev = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Inserts a vertex after the target vertex\n\n\t\tinsertAfter: function ( target, vertex ) {\n\n\t\t\tvertex.prev = target;\n\t\t\tvertex.next = target.next;\n\n\t\t\tif ( vertex.next === null ) {\n\n\t\t\t\tthis.tail = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.next.prev = vertex;\n\n\t\t\t}\n\n\t\t\ttarget.next = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Appends a vertex to the end of the linked list\n\n\t\tappend: function ( vertex ) {\n\n\t\t\tif ( this.head === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tthis.tail.next = vertex;\n\n\t\t\t}\n\n\t\t\tvertex.prev = this.tail;\n\t\t\tvertex.next = null; // the tail has no subsequent vertex\n\n\t\t\tthis.tail = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Appends a chain of vertices where 'vertex' is the head.\n\n\t\tappendChain: function ( vertex ) {\n\n\t\t\tif ( this.head === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tthis.tail.next = vertex;\n\n\t\t\t}\n\n\t\t\tvertex.prev = this.tail;\n\n\t\t\t// ensure that the 'tail' reference points to the last vertex of the chain\n\n\t\t\twhile ( vertex.next !== null ) {\n\n\t\t\t\tvertex = vertex.next;\n\n\t\t\t}\n\n\t\t\tthis.tail = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a vertex from the linked list\n\n\t\tremove: function ( vertex ) {\n\n\t\t\tif ( vertex.prev === null ) {\n\n\t\t\t\tthis.head = vertex.next;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.prev.next = vertex.next;\n\n\t\t\t}\n\n\t\t\tif ( vertex.next === null ) {\n\n\t\t\t\tthis.tail = vertex.prev;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.next.prev = vertex.prev;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n\t\tremoveSubList: function ( a, b ) {\n\n\t\t\tif ( a.prev === null ) {\n\n\t\t\t\tthis.head = b.next;\n\n\t\t\t} else {\n\n\t\t\t\ta.prev.next = b.next;\n\n\t\t\t}\n\n\t\t\tif ( b.next === null ) {\n\n\t\t\t\tthis.tail = a.prev;\n\n\t\t\t} else {\n\n\t\t\t\tb.next.prev = a.prev;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\treturn this.head === null;\n\n\t\t}\n\n\t} );\n\n\treturn ConvexHull;\n\n} )();\n\nexport { ConvexHull };\n","import { BufferAttribute, BufferGeometry, Mesh, Object3D, Quaternion, Vector3 } from 'three';\nimport type { Geometry } from 'three/examples/jsm/deprecated/Geometry';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _q1 = new Quaternion();\n\n/**\n* Returns a single geometry for the given object. If the object is compound,\n* its geometries are automatically merged. Bake world scale into each\n* geometry, because we can't easily apply that to the cannonjs shapes later.\n*/\nexport function getGeometry (object: Object3D): BufferGeometry | null {\n\tconst meshes = getMeshes(object);\n\tif (meshes.length === 0) return null;\n\n\t// Single mesh. Return, preserving original type.\n\tif (meshes.length === 1) {\n\t\treturn normalizeGeometry(meshes[0]);\n\t}\n\n\t// Multiple meshes. Merge and return.\n\tlet mesh: Mesh | undefined;\n\tconst geometries: BufferGeometry[] = [];\n\twhile ((mesh = meshes.pop())) {\n\t\tgeometries.push(simplifyGeometry(normalizeGeometry(mesh)));\n\t}\n\n\treturn mergeBufferGeometries(geometries);\n}\n\nfunction normalizeGeometry (mesh: Mesh): BufferGeometry {\n\tlet geometry: BufferGeometry = mesh.geometry;\n\tif ((geometry as unknown as Geometry).toBufferGeometry) {\n\t\tgeometry = (geometry as unknown as Geometry).toBufferGeometry();\n\t} else {\n\t\t// Preserve original type, e.g. CylinderBufferGeometry.\n\t\tgeometry = geometry.clone();\n\t}\n\n\tmesh.updateMatrixWorld();\n\tmesh.matrixWorld.decompose(_v1, _q1, _v2);\n\tgeometry.scale(_v2.x, _v2.y, _v2.z);\n\treturn geometry;\n}\n\n/**\n * Greatly simplified version of BufferGeometryUtils.mergeBufferGeometries.\n * Because we only care about the vertex positions, and not the indices or\n * other attributes, we throw everything else away.\n */\nfunction mergeBufferGeometries (geometries: BufferGeometry[]): BufferGeometry {\n\tlet vertexCount = 0;\n\tfor (let i = 0; i < geometries.length; i++) {\n\t\tconst position = geometries[i].attributes.position;\n\t\tif (position && position.itemSize === 3) {\n\t\t\tvertexCount += position.count;\n\t\t}\n\t}\n\n\tconst positionArray = new Float32Array(vertexCount * 3);\n\n\tlet positionOffset = 0;\n\tfor (let i = 0; i < geometries.length; i++) {\n\t\tconst position = geometries[i].attributes.position;\n\t\tif (position && position.itemSize === 3) {\n\t\t\tfor (let j = 0; j < position.count; j++) {\n\t\t\t\tpositionArray[positionOffset++] = position.getX(j);\n\t\t\t\tpositionArray[positionOffset++] = position.getY(j);\n\t\t\t\tpositionArray[positionOffset++] = position.getZ(j);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn new BufferGeometry().setAttribute('position', new BufferAttribute(positionArray, 3));\n}\n\nexport function getVertices (geometry: BufferGeometry): Float32Array {\n\tconst position = geometry.attributes.position;\n\tconst vertices = new Float32Array(position.count * 3);\n\tfor (let i = 0; i < position.count; i++) {\n\t\tvertices[i * 3] = position.getX(i);\n\t\tvertices[i * 3 + 1] = position.getY(i);\n\t\tvertices[i * 3 + 2] = position.getZ(i);\n\t}\n\treturn vertices;\n}\n\n/**\n* Returns a flat array of THREE.Mesh instances from the given object. If\n* nested transformations are found, they are applied to child meshes\n* as mesh.userData.matrix, so that each mesh has its position/rotation/scale\n* independently of all of its parents except the top-level object.\n*/\nfunction getMeshes (object: Object3D): Mesh[] {\n\tconst meshes: Mesh[] = [];\n\tobject.traverse(function (o) {\n\t\tif ((o as Mesh).isMesh) {\n\t\t\tmeshes.push(o as Mesh);\n\t\t}\n\t});\n\treturn meshes;\n}\n\nexport function getComponent(v: Vector3, component: string): number {\n\tswitch(component) {\n\t\tcase 'x': return v.x;\n\t\tcase 'y': return v.y;\n\t\tcase 'z': return v.z;\n\t}\n\tthrow new Error(`Unexpected component ${component}`);\n}\n\n/**\n* Modified version of BufferGeometryUtils.mergeVertices, ignoring vertex\n* attributes other than position.\n*\n* @param {THREE.BufferGeometry} geometry\n* @param {number} tolerance\n* @return {THREE.BufferGeometry>}\n*/\nfunction simplifyGeometry (geometry: BufferGeometry, tolerance = 1e-4): BufferGeometry {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex: {[key: string]: number} = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// Next value for triangle indices.\n\tlet nextIndex = 0;\n\n\tconst newIndices = [];\n\tconst newPositions = [];\n\n\t// Convert the error tolerance to an amount of decimal places to truncate to.\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'.\n\t\tlet hash = '';\n\n\t\t// Double tilde truncates the decimal value.\n\t\thash += `${ ~ ~ ( positions.getX( index ) * shiftMultiplier ) },`;\n\t\thash += `${ ~ ~ ( positions.getY( index ) * shiftMultiplier ) },`;\n\t\thash += `${ ~ ~ ( positions.getZ( index ) * shiftMultiplier ) },`;\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index.\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\tnewPositions.push( positions.getX( index ) );\n\t\t\tnewPositions.push( positions.getY( index ) );\n\t\t\tnewPositions.push( positions.getZ( index ) );\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// Construct merged BufferGeometry.\n\n\tconst positionAttribute = new BufferAttribute(\n\t\tnew Float32Array( newPositions ),\n\t\tpositions.itemSize,\n\t\tpositions.normalized\n\t);\n\n\tconst result = new BufferGeometry();\n\tresult.setAttribute( 'position', positionAttribute );\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n","import { Box, ConvexPolyhedron, Cylinder, Quaternion as CQuaternion, Shape, Sphere, Trimesh, Vec3 } from 'cannon-es';\nimport { Box3, BufferGeometry, CylinderGeometry, MathUtils, Mesh, Object3D, SphereGeometry, Vector3 } from 'three';\nimport { ConvexHull } from '../lib/ConvexHull';\nimport { getComponent, getGeometry, getVertices } from './utils';\n\nconst PI_2 = Math.PI / 2;\n\nexport type BoxParameters = { x: number, y: number, z: number };\n\nexport type CylinderParameters = { radiusTop: number, radiusBottom: number, height: number, segments: number };\n\nexport type SphereParameters = { radius: number };\n\nexport type ConvexPolyhedronParameters = { vertices: Float32Array, faces: number[][] };\n\nexport type TrimeshParameters = { vertices: Float32Array, indices: Uint32Array };\n\ntype ShapeTypeToShapeParameters = {\n\tBox: BoxParameters,\n\tCylinder: CylinderParameters,\n\tSphere: SphereParameters,\n\tConvexPolyhedron: ConvexPolyhedronParameters,\n\tTrimesh: TrimeshParameters,\n};\n\nexport enum ShapeType {\n\tBOX = 'Box',\n\tCYLINDER = 'Cylinder',\n\tSPHERE = 'Sphere',\n\tHULL = 'ConvexPolyhedron',\n\tMESH = 'Trimesh',\n}\n\nexport interface ShapeOptions {\n\ttype?: ShapeType,\n\tcylinderAxis?: 'x' | 'y' | 'z',\n\tsphereRadius?: number,\n}\n\nexport interface ShapeParameters<T extends ShapeType = ShapeType> {\n\ttype: T,\n\tparams: ShapeTypeToShapeParameters[T],\n\toffset?: Vec3,\n\torientation?: CQuaternion,\n}\n\nexport interface ShapeResult<T extends Shape = Shape> {\n\tshape: T,\n\toffset?: Vec3,\n\torientation?: CQuaternion,\n}\n\n/**\n * Given a THREE.Object3D instance, creates parameters for a CANNON shape.\n */\nexport const getShapeParameters = function (object: Object3D, options: ShapeOptions = {}): ShapeParameters | null {\n\tlet geometry: BufferGeometry | null;\n\n\tif (options.type === ShapeType.BOX) {\n\t\treturn getBoundingBoxParameters(object);\n\t} else if (options.type === ShapeType.CYLINDER) {\n\t\treturn getBoundingCylinderParameters(object, options);\n\t} else if (options.type === ShapeType.SPHERE) {\n\t\treturn getBoundingSphereParameters(object, options);\n\t} else if (options.type === ShapeType.HULL) {\n\t\treturn getConvexPolyhedronParameters(object);\n\t} else if (options.type === ShapeType.MESH) {\n\t\tgeometry = getGeometry(object);\n\t\treturn geometry ? getTrimeshParameters(geometry) : null;\n\t} else if (options.type) {\n\t\tthrow new Error(`[CANNON.getShapeParameters] Invalid type \"${options.type}\".`);\n\t}\n\n\tgeometry = getGeometry(object);\n\tif (!geometry) return null;\n\n\tswitch (geometry.type) {\n\t\tcase 'BoxGeometry':\n\t\tcase 'BoxBufferGeometry':\n\t\t\treturn getBoxParameters(geometry);\n\t\tcase 'CylinderGeometry':\n\t\tcase 'CylinderBufferGeometry':\n\t\t\treturn getCylinderParameters(geometry as CylinderGeometry);\n\t\tcase 'PlaneGeometry':\n\t\tcase 'PlaneBufferGeometry':\n\t\t\treturn getPlaneParameters(geometry);\n\t\tcase 'SphereGeometry':\n\t\tcase 'SphereBufferGeometry':\n\t\t\treturn getSphereParameters(geometry as SphereGeometry);\n\t\tcase 'TubeGeometry':\n\t\tcase 'BufferGeometry':\n\t\t\treturn getBoundingBoxParameters(object);\n\t\tdefault:\n\t\t\tconsole.warn(\n\t\t\t\t'Unrecognized geometry: \"%s\". Using bounding box as shape.', geometry.type\n\t\t\t);\n\t\t\treturn getBoxParameters(geometry);\n\t}\n};\n\n/**\n * Given a THREE.Object3D instance, creates a corresponding CANNON shape.\n */\nexport const threeToCannon = function (object: Object3D, options: ShapeOptions = {}): ShapeResult | null {\n\tconst shapeParameters = getShapeParameters(object, options);\n\tif (!shapeParameters) {\n\t\treturn null;\n\t}\n\n\tconst { type, params, offset, orientation } = shapeParameters;\n\n\tlet shape: Shape;\n\tif (type === ShapeType.BOX) {\n\t\tshape = createBox(params as BoxParameters);\n\t} else if (type === ShapeType.CYLINDER) {\n\t\tshape = createCylinder(params as CylinderParameters);\n\t} else if (type === ShapeType.SPHERE) {\n\t\tshape = createSphere(params as SphereParameters);\n\t} else if (type === ShapeType.HULL) {\n\t\tshape = createConvexPolyhedron(params as ConvexPolyhedronParameters);\n\t} else {\n\t\tshape = createTrimesh(params as TrimeshParameters);\n\t}\n\n\treturn {\n\t\tshape,\n\t\toffset,\n\t\torientation,\n\t};\n};\n\n/******************************************************************************\n * Shape construction\n */\n\n function createBox (params: BoxParameters): Box {\n\tconst { x, y, z } = params;\n\tconst shape = new Box(new Vec3(x, y, z));\n\treturn shape;\n}\n\nfunction createCylinder (params: CylinderParameters): Cylinder {\n\tconst { radiusTop, radiusBottom, height, segments } = params;\n\n\tconst shape = new Cylinder(radiusTop, radiusBottom, height, segments);\n\n\t// Include metadata for serialization.\n\t// TODO(cleanup): Is this still necessary?\n\tshape.radiusTop = radiusBottom;\n\tshape.radiusBottom = radiusBottom;\n\tshape.height = height;\n\tshape.numSegments = segments;\n\n\treturn shape;\n}\n\nfunction createSphere (params: SphereParameters): Sphere {\n\tconst shape = new Sphere(params.radius);\n\n\treturn shape;\n}\n\nfunction createConvexPolyhedron (params: ConvexPolyhedronParameters): ConvexPolyhedron {\n\tconst { faces, vertices: verticesArray } = params;\n\n\tconst vertices: Vec3[] = [];\n\tfor (let i = 0; i < verticesArray.length; i += 3) {\n\t\tvertices.push(new Vec3(\n\t\t\tverticesArray[i],\n\t\t\tverticesArray[i + 1],\n\t\t\tverticesArray[i + 2]\n\t\t));\n\t}\n\n\tconst shape = new ConvexPolyhedron({\n\t\tfaces,\n\t\tvertices\n\t});\n\n\treturn shape;\n}\n\nfunction createTrimesh (params: TrimeshParameters): Trimesh {\n\tconst { vertices, indices } = params\n\tconst shape = new Trimesh(\n\t\tvertices as unknown as number[],\n\t\tindices as unknown as number[],\n\t);\n\n\treturn shape;\n}\n\n/******************************************************************************\n * Shape parameters\n */\n\nfunction getBoxParameters (geometry: BufferGeometry): ShapeParameters<ShapeType.BOX> | null {\n\tconst vertices = getVertices(geometry);\n\n\tif (!vertices.length) return null;\n\n\tgeometry.computeBoundingBox();\n\tconst box = geometry.boundingBox!;\n\n\treturn {\n\t\ttype: ShapeType.BOX,\n\t\tparams: {\n\t\t\tx: (box.max.x - box.min.x) / 2,\n\t\t\ty: (box.max.y - box.min.y) / 2,\n\t\t\tz: (box.max.z - box.min.z) / 2,\n\t\t},\n\t};\n}\n\n/** Bounding box needs to be computed with the entire subtree, not just geometry. */\nfunction getBoundingBoxParameters (object: Object3D): ShapeParameters<ShapeType.BOX> | null {\n\tconst clone = object.clone();\n\tclone.quaternion.set(0, 0, 0, 1);\n\tclone.updateMatrixWorld();\n\n\tconst box = new Box3().setFromObject(clone);\n\n\tif (!isFinite(box.min.lengthSq())) return null;\n\n\tconst localPosition = box.translate(clone.position.negate()).getCenter(new Vector3());\n\n\treturn {\n\t\ttype: ShapeType.BOX,\n\t\tparams: {\n\t\t\tx: (box.max.x - box.min.x) / 2,\n\t\t\ty: (box.max.y - box.min.y) / 2,\n\t\t\tz: (box.max.z - box.min.z) / 2,\n\t\t},\n\t\toffset: localPosition.lengthSq()\n\t\t\t? new Vec3(localPosition.x, localPosition.y, localPosition.z)\n\t\t\t: undefined,\n\t};\n}\n\n/** Computes 3D convex hull as a CANNON.ConvexPolyhedron. */\nfunction getConvexPolyhedronParameters (object: Object3D): ShapeParameters<ShapeType.HULL> | null {\n\tconst geometry = getGeometry(object);\n\n\tif (!geometry) return null;\n\n\t// Perturb.\n\tconst eps = 1e-4;\n\tfor (let i = 0; i < geometry.attributes.position.count; i++) {\n\t\tgeometry.attributes.position.setXYZ(\n\t\t\ti,\n\t\t\tgeometry.attributes.position.getX(i) + (Math.random() - 0.5) * eps,\n\t\t\tgeometry.attributes.position.getY(i) + (Math.random() - 0.5) * eps,\n\t\t\tgeometry.attributes.position.getZ(i) + (Math.random() - 0.5) * eps,\n\t\t);\n\t}\n\n\t// Compute the 3D convex hull and collect convex hull vertices and faces.\n\tconst [ positions, indices ] = new ConvexHull()\n\t\t.setFromObject(new Mesh(geometry))\n\t\t.toJSON();\n\n\treturn {\n\t\ttype: ShapeType.HULL,\n\t\tparams: {\n\t\t\tvertices: new Float32Array(positions),\n\t\t\tfaces: indices,\n\t\t},\n\t};\n}\n\nfunction getCylinderParameters (\n\tgeometry: CylinderGeometry\n): ShapeParameters<ShapeType.CYLINDER> | null {\n\tconst params = geometry.parameters;\n\n\treturn {\n\t\ttype: ShapeType.CYLINDER,\n\t\tparams: {\n\t\t\tradiusTop: params.radiusTop,\n\t\t\tradiusBottom: params.radiusBottom,\n\t\t\theight: params.height,\n\t\t\tsegments: params.radialSegments,\n\t\t},\n\t\torientation: new CQuaternion()\n\t\t\t.setFromEuler(MathUtils.degToRad(-90), 0, 0, 'XYZ')\n\t\t\t.normalize(),\n\t}\n}\n\nfunction getBoundingCylinderParameters (\n\tobject: Object3D,\n\toptions: ShapeOptions\n): ShapeParameters<ShapeType.CYLINDER> | null {\n\tconst axes = ['x', 'y', 'z'];\n\tconst majorAxis = options.cylinderAxis || 'y';\n\tconst minorAxes = axes.splice(axes.indexOf(majorAxis), 1) && axes;\n\tconst box = new Box3().setFromObject(object);\n\n\tif (!isFinite(box.min.lengthSq())) return null;\n\n\t// Compute cylinder dimensions.\n\tconst height = box.max[majorAxis] - box.min[majorAxis];\n\tconst radius = 0.5 * Math.max(\n\t\tgetComponent(box.max, minorAxes[0]) - getComponent(box.min, minorAxes[0]),\n\t\tgetComponent(box.max, minorAxes[1]) - getComponent(box.min, minorAxes[1]),\n\t);\n\n\tconst eulerX = majorAxis === 'y' ? PI_2 : 0;\n\tconst eulerY = majorAxis === 'z' ? PI_2 : 0;\n\n\treturn {\n\t\ttype: ShapeType.CYLINDER,\n\t\tparams: {\n\t\t\tradiusTop: radius,\n\t\t\tradiusBottom: radius,\n\t\t\theight,\n\t\t\tsegments: 12,\n\t\t},\n\t\torientation: new CQuaternion()\n\t\t\t.setFromEuler(eulerX, eulerY, 0, 'XYZ')\n\t\t\t.normalize(),\n\t};\n}\n\nfunction getPlaneParameters (geometry: BufferGeometry): ShapeParameters<ShapeType.BOX> | null {\n\tgeometry.computeBoundingBox();\n\tconst box = geometry.boundingBox!;\n\n\treturn {\n\t\ttype: ShapeType.BOX,\n\t\tparams: {\n\t\t\tx: (box.max.x - box.min.x) / 2 || 0.1,\n\t\t\ty: (box.max.y - box.min.y) / 2 || 0.1,\n\t\t\tz: (box.max.z - box.min.z) / 2 || 0.1,\n\t\t},\n\t};\n}\n\nfunction getSphereParameters (geometry: SphereGeometry): ShapeParameters<ShapeType.SPHERE> | null {\n\treturn {\n\t\ttype: ShapeType.SPHERE,\n\t\tparams: { radius: geometry.parameters.radius },\n\t};\n}\n\nfunction getBoundingSphereParameters (\n\tobject: Object3D,\n\toptions: ShapeOptions\n): ShapeParameters<ShapeType.SPHERE> | null {\n\tif (options.sphereRadius) {\n\t\treturn {\n\t\t\ttype: ShapeType.SPHERE,\n\t\t\tparams: { radius: options.sphereRadius },\n\t\t};\n\t}\n\tconst geometry = getGeometry(object);\n\tif (!geometry) return null;\n\tgeometry.computeBoundingSphere();\n\n\treturn {\n\t\ttype: ShapeType.SPHERE,\n\t\tparams: { radius: geometry.boundingSphere!.radius },\n\t};\n}\n\nfunction getTrimeshParameters (geometry: BufferGeometry): ShapeParameters<ShapeType.MESH> | null {\n\tconst vertices = getVertices(geometry);\n\n\tif (!vertices.length) return null;\n\n\tconst indices = new Uint32Array(vertices.length);\n\tfor (let i = 0; i < vertices.length; i++) {\n\t\tindices[i] = i;\n\t}\n\n\treturn {\n\t\ttype: ShapeType.MESH,\n\t\tparams: {\n\t\t\tvertices,\n\t\t\tindices,\n\t\t},\n\t};\n}\n"],"names":["ConvexHull","Visible","Deleted","v1","Vector3","tolerance","faces","newFaces","assigned","VertexList","unassigned","vertices","Object","assign","prototype","toJSON","srcIndices","map","f","toArray","uniqueSrcIndices","Array","from","Set","flat","sort","dstPositions","i","length","push","point","x","y","z","srcToDstIndexMap","Map","set","dstIndices","get","setFromPoints","points","isArray","console","error","makeEmpty","l","VertexNode","compute","setFromObject","object","updateMatrixWorld","traverse","node","geometry","undefined","isGeometry","toBufferGeometry","BufferGeometry","fromGeometry","isBufferGeometry","attribute","attributes","position","count","fromBufferAttribute","applyMatrix4","matrixWorld","containsPoint","face","distanceToPoint","intersectRay","ray","target","tNear","Infinity","tFar","vN","origin","vD","normal","dot","direction","t","Math","min","max","at","intersectsRay","addVertexToFace","vertex","outside","append","insertBefore","removeVertexFromFace","next","remove","removeAllVerticesFromFace","start","end","removeSubList","prev","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distance","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","mark","computeExtremes","minVertices","maxVertices","j","copy","getComponent","setComponent","Number","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","extremes","v0","v2","v3","index","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","Face","create","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","edge","twinEdge","twin","oppositeFace","addAdjoiningFace","horizonEdge","tail","head","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","clear","cleanup","midpoint","area","constant","a","b","c","e0","HalfEdge","e1","e2","indices","triangle","Triangle","getNormal","getMidpoint","getArea","distanceTo","lengthSquared","last","insertAfter","_v1","_v2","_q1","Quaternion","getGeometry","meshes","getMeshes","normalizeGeometry","mesh","geometries","pop","simplifyGeometry","mergeBufferGeometries","clone","decompose","scale","vertexCount","itemSize","positionArray","Float32Array","positionOffset","getX","getY","getZ","setAttribute","BufferAttribute","getVertices","o","isMesh","v","component","Error","hashToIndex","getIndex","positions","getAttribute","nextIndex","newIndices","newPositions","decimalShift","log10","shiftMultiplier","pow","hash","positionAttribute","normalized","result","setIndex","PI_2","PI","ShapeType","getShapeParameters","options","type","BOX","getBoundingBoxParameters","CYLINDER","getBoundingCylinderParameters","SPHERE","getBoundingSphereParameters","HULL","getConvexPolyhedronParameters","MESH","getTrimeshParameters","getBoxParameters","getCylinderParameters","getPlaneParameters","getSphereParameters","warn","threeToCannon","shapeParameters","params","offset","orientation","shape","createBox","createCylinder","createSphere","createConvexPolyhedron","createTrimesh","Box","Vec3","radiusTop","radiusBottom","height","segments","Cylinder","numSegments","Sphere","radius","verticesArray","ConvexPolyhedron","Trimesh","computeBoundingBox","box","boundingBox","quaternion","Box3","isFinite","lengthSq","localPosition","translate","negate","getCenter","eps","setXYZ","random","Mesh","parameters","radialSegments","CQuaternion","setFromEuler","MathUtils","degToRad","normalize","axes","majorAxis","cylinderAxis","minorAxes","splice","indexOf","eulerX","eulerY","sphereRadius","computeBoundingSphere","boundingSphere","Uint32Array"],"mappings":"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"}